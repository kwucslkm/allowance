# version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"  # SSL 적용
    depends_on:
      - allowfront
    networks:
      - app_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot -d kwcsani.iptime.org --email your-email@example.com --agree-tos --no-eff-email --force-renewal

  allowback:
    build: 
      context: ./allowback
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=kwucsani.iptime.org
      - DB_PORT=5506
      - DB_USER=root
      - DB_PASSWORD=1001
      - DB_NAME=allowance_db
    networks:
      - app_network

  allowfront:
    build: 
      context: ./allowfront
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - allowback
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  certbot_data:
  certbot_config:

# # docker-compose.yml
# # version: '3.8'

# services:
#   nginx:
#     image: nginx:alpine
#     container_name: nginx_proxy
#     restart: always
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - "80:80"
#     depends_on:
#       - allowfront
#     networks:
#       - app_network

#   allowback:
#     build: 
#       context: ./allowback
#       dockerfile: Dockerfile
#     ports:
#       - "3001:3001"
#     environment:
#       - NODE_ENV=production
#       - PORT=3001
#       # - DB_HOST=mysql80
#       - DB_HOST=kwucsani.iptime.org
#       - DB_PORT=5506
#       - DB_USER=root
#       - DB_PASSWORD=1001
#       - DB_NAME=allowance_db
#     # depends_on:[]
#       # - mysql
#     networks:
#       - app_network

#   allowfront:
#     build: 
#       context: ./allowfront
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     depends_on:
#       - allowback
#     networks:
#       - app_network
######################################################################################################
  # mysql:
  #   external:
  #     name: mysql80
    # image: mysql:8.0
    # # container_name: mysql80
    # environment:
    #   MYSQL_ROOT_PASSWORD: 1001
    #   MYSQL_DATABASE: allowance_db
    #   # MYSQL_USER: root
    #   # MYSQL_PASSWORD: 1001
    # ports:
    #   - "5506:3306"
    # volumes:
    #   - mysql80_data:/var/lib/mysql
    # restart: unless-stopped
    # networks:
    #   - app_network

# networks:
#   app_network:
#     driver: bridge

# volumes:
#   mysql80_data: