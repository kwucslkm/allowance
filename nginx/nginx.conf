worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # HTTP 요청을 HTTPS로 리디렉션
    server {
        listen 80;
        server_name kwucsani.iptime.org;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # SSL 적용된 HTTPS 서버 설정
    server {
        listen 443 ssl;
        server_name kwucsani.iptime.org;

        ssl_certificate /etc/letsencrypt/live/kwucsani.iptime.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kwucsani.iptime.org/privkey.pem;

        # 클라이언트 요청 본문 크기 제한
        client_max_body_size 10M;

        # 타임아웃 설정
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        send_timeout 60;

        location / {
            proxy_pass http://allowfront:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 지원 (React 개발 서버 사용 시 필요)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/ {
            proxy_pass http://allowback:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        # 에러 페이지 처리
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}


# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     server {
#         listen 80;
#         server_name kwucsani.iptime.org;

#         # 클라이언트 요청 본문 크기 제한
#         client_max_body_size 10M;

#         # 타임아웃 설정
#         proxy_connect_timeout 60;
#         proxy_send_timeout 60;
#         proxy_read_timeout 60;
#         send_timeout 60;

#         location / {
#             proxy_pass http://allowfront:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
            
#             # WebSocket 지원 (React 개발 서버 사용 시 필요)
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#         }

#         location /api/ {
#             proxy_pass http://allowback:3001;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # CORS 헤더 추가 (필요한 경우)
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
#         }

#         # 에러 페이지 처리
#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }
